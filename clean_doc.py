# -*- coding: utf-8 -*-
"""clean_doc.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RxWQXyZ8V9xCO2vsi8R2oqdVIcWN3p5a
"""

import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv("/content/product_inventory.csv")

df = df.rename(columns={
    'product_name': 'ProductName',
    'category': 'Category',
    'subcategory': 'SubCategory',
    'brand': 'Brand',
    'cost_price': 'CostPrice',
    'selling_price': 'SellingPrice',
    'stock_quantity': 'Stock',
    'reorder_level': 'RecorderLevel',
    'supplier_id': 'SupplierID',
    'warehouse_location': 'WareHouse'
})

df.head(3)

"""# ðŸ§¹ Data Cleaning
Renaming columns and removing extra spaces.
"""

df['SubCategory'] = df['SubCategory'].str.strip()

df['Category'] = df['Category'].str.strip()
df['Brand'] = df['Brand'].str.strip()
df['ProductName'] = df['ProductName'].str.strip()

df.head(3)

brand_price = df.groupby('Brand')['SellingPrice'].sum()
brand_price

position_df = df.groupby('WareHouse')['Stock'].sum()
position_df

"""# ðŸ“Š Visualization 1: Warehouse Stock
Bar chart of stock across warehouses.
"""

position_df.plot(kind='bar', title="Warehouse Stock", color="green", figsize=(4, 3))
plt.xlabel("WareHouse")
plt.ylabel("Stock")
plt.grid()

df['Profit'] = df['SellingPrice'] - df['CostPrice']
df.head(3)

df['UnderStocked'] = df['Stock'] < df['RecorderLevel']
df['UnderStocked'].head(3)

brand_df = (
    df.groupby('Brand')['RecorderLevel']
    .sum()
    .sort_values(ascending=False)
    .head(5)
)
brand_df

"""# ðŸ“Š Visualization 2: Top 5 Brands
Top 5 brands by sales.
"""

brand_df.plot(kind='bar', title="Brand Sales", color="royalblue", figsize=(4, 3))
plt.xlabel("Brand")
plt.ylabel("Sales")
plt.grid(axis='y')

"""ðŸ“ˆVisualization 3: Average Profit per Brand"""

profit_brand = df.groupby('Brand')['Profit'].mean().sort_values(ascending=False)
profit_brand.plot(kind='bar', title="Average Profit per Brand", color="orange", figsize=(6, 5))
plt.xlabel("Brand")
plt.ylabel("Profit")
plt.grid(axis='y')

"""# ðŸ“Š Visualization 4: Sales Share by Category
Pie chart showing sales contribution of each category.



"""

category_sales = df.groupby('Category')['SellingPrice'].sum()
category_sales.sort_values().plot(
    kind='barh',
    figsize=(6,4),
    color="skyblue",
    title="Sales Share by Category"
)
plt.xlabel("Total Sales")
plt.grid(axis='x')
plt.show()